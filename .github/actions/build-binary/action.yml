name: "Build Quickwit binary"
description: "Build React app and Rust binary with cargo cross."
inputs:
  target:
    description: "Target"
    required: true
  version:
    description: "Binary version"
    required: true
  token:
    description: "GitHub access token"
    required: true
runs:
  using: "composite"
  steps:
    - run: echo "ASSET_FULL_NAME=quickwit-${{ inputs.version }}-${{ inputs.target }}" >> $GITHUB_ENV
      shell: bash
    - uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: "yarn"
        cache-dependency-path: quickwit/quickwit-ui/yarn.lock
    - run: make build-ui
      shell: bash
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ inputs.target }}
        override: true
    - name: Install cross
      run: cargo install cross
      shell: bash
    - name: Build Quickwit
      run: cross build --release --features release-feature-vendored-set --target ${{ inputs.target }}
      shell: bash
      working-directory: ./quickwit
    - name: Bundle archive
      run: |
        make archive BINARY_FILE=quickwit/target/${{ inputs.target }}/release/quickwit \
          BINARY_VERSION=${{ inputs.version }} ARCHIVE_NAME=${{ env.ASSET_FULL_NAME }}
      shell: bash
    - name: Save binary archive for three days
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.ASSET_FULL_NAME }}.tar.gz
        path: ./${{ env.ASSET_FULL_NAME }}.tar.gz
        retention-days: 3
    - name: Upload archive
      if: "${{ inputs.version != 'nightly' }}"
      uses: quickwit-inc/upload-to-github-release@v1
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      with:
        file: ${{ env.ASSET_FULL_NAME }}.tar.gz
        overwrite: true
        tag_name: ${{ inputs.version }}
