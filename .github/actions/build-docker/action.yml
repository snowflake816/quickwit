name: 'Build Quickwit docker image'
description: 'Build & push docker image'
inputs:
  username:
    description: 'Docker Hub username'
    required: true
  token:
    description: 'Docker Hub access token'
    required: true
  version:
    description: 'Image version suffix'
    required: false
runs:
  using: "composite"
  steps:
    - name: Image name when version is not empty
      if: "${{ inputs.version != '' }}"
      run: echo "IMAGE_ID=quickwit/quickwit-${{ inputs.version }}" >> $GITHUB_ENV
      shell: bash
    - name: Image name when version is empty
      if: "${{ inputs.version == '' }}"
      run: echo "IMAGE_ID=quickwit/quickwit" >> $GITHUB_ENV
      shell: bash
    - run: echo "IMAGE_DATE=$(date '+%Y-%m-%d')" >> $GITHUB_ENV
      shell: bash
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ inputs.username }}
        password: ${{ inputs.token }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.IMAGE_ID }}
        labels: |
          org.opencontainers.image.title=Quickwit
          maintainer=Quickwit, Inc. <hello@quickwit.io>
          org.opencontainers.image.vendor=Quickwit, Inc.
          org.opencontainers.image.licenses=AGPL-3.0
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: ./
        platforms: linux/amd64
        push: true
        labels: ${{ steps.meta.outputs.labels }}
        tags: ${{ env.IMAGE_ID }}:latest, ${{ env.IMAGE_ID }}:${{ env.IMAGE_DATE }}
