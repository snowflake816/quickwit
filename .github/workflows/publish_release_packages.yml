name: Build and publish release packages

on:
  push:
    tags:
      - "v*"

jobs:
  build-native-binaries:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin
          # TODO: uncomment this when windows is fully supported.
          #   Also windows artifact doesn't need to be archived
          # - build: windows
          #   os: windows-latest
          #   target: x86_64-pc-windows.exe

    steps:
      - uses: actions/checkout@v3
      - name: Extract asset version
        run: echo "ASSET_VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
      - name: Extract asset full name
        run: echo "ASSET_FULL_NAME=quickwit-${{ env.ASSET_VERSION }}-${{ matrix.target }}" >> $GITHUB_ENV
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build binary
        run: cargo build --release --features release-feature-vendored-set
      - name: Bundle archive
        run: |
          make archive BINARY_FILE=target/release/quickwit \
            BINARY_VERSION=${{ env.ASSET_VERSION }} ARCHIVE_NAME=${{ env.ASSET_FULL_NAME }}
      - name: Save binary archive for few days
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ASSET_FULL_NAME }}.tar.gz
          path: ./${{ env.ASSET_FULL_NAME }}.tar.gz
          retention-days: 3
      - name: Upload archive
        uses: quickwit-inc/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: ${{ env.ASSET_FULL_NAME }}.tar.gz
          overwrite: true
          tag_name: ${{ env.ASSET_VERSION }}

  build-binaries:
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]
    name: Build ${{ matrix.target }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Extract asset version
        run: echo "ASSET_VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
      - uses: ./.github/actions/build-binary
        with:
          target: ${{ matrix.target }}
          version: ${{ env.ASSET_VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ./quickwit
