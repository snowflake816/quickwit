on:
  pull_request:
  push:
    branches:
      - main
    paths:
      - "Cargo.lock"
      - "Cargo.toml"
      - "quickwit-*/**"

name: CI

env:
  RUSTFLAGS: -Dwarnings
  RUST_BACKTRACE: 1

jobs:
  ci-passes:
    name: CI passes
    runs-on: ubuntu-latest
    needs:
      - clippy
      - fmt
      - test
    steps:
      - run: exit 0

  clippy:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check license header
        uses: apache/skywalking-eyes@758c8a3e4e9d15eded5cf08de2cb54b3aebe4faf
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy, rustfmt # fmt required when generating proto
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all --tests
      - uses: actions-rs/install@v0.1
        name: install cargo deny
        with:
          crate: cargo-deny
          use-tool-cache: true
      - uses: actions-rs/cargo@v1
        name: cargo deny
        with:
          command: deny
          args: check License

  fmt:
    name: Check format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt # fmt required when generating proto
      - run: cargo fmt --all -- --check

  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup localstack
        run: docker-compose -f localstack.yaml up -d
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      - name: Create bucket in localstack
        run: docker-compose -f localstack.yaml exec -T localstack awslocal s3 mb s3://quickwit-integration-tests
      - name: Run all tests.
        env:
          AWS_ACCESS_KEY_ID: dummy-access-key
          AWS_SECRET_ACCESS_KEY: dummy-secret-key
        run: cargo test --all-features
