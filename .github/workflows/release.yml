name: Build release packages

on:
  push:
    tags:
      - 'v*'
    branches:
      - 'make-binaries-from-ci'

jobs:
  native-build:
    name: release for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - build: macos
            os: macos-latest
            artifact_name: quickwit
            asset_name: x86_64-apple-darwin
          # TODO: uncomment this when windows is fully supported.
          #   Also windows artifact doesn't need to be archived     
          # - build: windows
          #   os: windows-latest
          #   artifact_name: quickwit.exe
          #   asset_name: x86_64-pc-windows.exe

    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/artifact-name
        with: 
          suffix: ${{ matrix.asset_name }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build binary
        run: cargo build --release --features release-feature-vendored-set
      - name: Save artifact for few days
        if: ${{ github.ref == 'refs/heads/make-binaries-from-ci' }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifact_name }}-${{ matrix.asset_name }}
          path: target/release/${{ matrix.artifact_name }}
          retention-days: 3
      - name: Rename artifact
        if: ${{ github.ref != 'refs/heads/make-binaries-from-ci' }}
        run: mv target/release/${{ matrix.artifact_name }} ${{ env.ASSET_FULL_NAME }}
      - name: Compress artifact
        if: ${{ github.ref != 'refs/heads/make-binaries-from-ci' }}
        run: tar -czvf ${{ env.ASSET_FULL_NAME }}.tar.gz ${{ env.ASSET_FULL_NAME }}
      - name: Upload artifact
        if: ${{ github.ref != 'refs/heads/make-binaries-from-ci' }}
        uses: quickwit-inc/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: ${{ env.ASSET_FULL_NAME }}.tar.gz
          overwrite: true
          tag_name: ${{ env.ASSET_VERSION }}

  x86_64-unknown-linux-gnu:
    name: release x86_64-unknown-linux-gnu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/artifact-name
        with: 
          suffix: x86_64-unknown-linux-gnu
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --features release-feature-vendored-set --target x86_64-unknown-linux-gnu
      - name: Save artifact for few days
        if: ${{ github.ref == 'refs/heads/make-binaries-from-ci' }}
        uses: actions/upload-artifact@v2
        with:
          name: quickwit-x86_64-unknown-linux-gnu
          path: target/x86_64-unknown-linux-gnu/release/quickwit
          retention-days: 3
      - name: Rename artifact
        if: ${{ github.ref != 'refs/heads/make-binaries-from-ci' }}
        run: mv target/x86_64-unknown-linux-gnu/release/quickwit ${{ env.ASSET_FULL_NAME }}
      - name: Compress artifact
        if: ${{ github.ref != 'refs/heads/make-binaries-from-ci' }}
        run: tar -czvf ${{ env.ASSET_FULL_NAME }}.tar.gz ${{ env.ASSET_FULL_NAME }}
      - name: Upload artifact
        if: ${{ github.ref != 'refs/heads/make-binaries-from-ci' }}
        uses: quickwit-inc/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: ${{ env.ASSET_FULL_NAME }}.tar.gz
          overwrite: true
          tag_name: ${{ env.ASSET_VERSION }}

  x86_64-linux-musl:
    name: release x86_64-linux-musl
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/artifact-name
        with: 
          suffix: x86_64-unknown-linux-musl
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-musl
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --features release-feature-set --target x86_64-unknown-linux-musl
      - name: Save artifact for few days
        if: ${{ github.ref == 'refs/heads/make-binaries-from-ci' }}
        uses: actions/upload-artifact@v2
        with:
          name: quickwit-x86_64-unknown-linux-musl
          path: target/x86_64-unknown-linux-musl/release/quickwit
          retention-days: 3
      - name: Rename artifact
        if: ${{ github.ref != 'refs/heads/make-binaries-from-ci' }}
        run: mv target/x86_64-unknown-linux-musl/release/quickwit ${{ env.ASSET_FULL_NAME }}
      - name: Compress artifact
        if: ${{ github.ref != 'refs/heads/make-binaries-from-ci' }}
        run: tar -czvf ${{ env.ASSET_FULL_NAME }}.tar.gz ${{ env.ASSET_FULL_NAME }}
      - name: Upload artifact
        if: ${{ github.ref != 'refs/heads/make-binaries-from-ci' }}
        uses: quickwit-inc/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: ${{ env.ASSET_FULL_NAME }}.tar.gz
          overwrite: true
          tag_name: ${{ env.ASSET_VERSION }}

  aarch64-linux-gnu:
    name: release aarch64-linux-gnu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/artifact-name
        with: 
          suffix: aarch64-unknown-linux-gnu
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-unknown-linux-gnu
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --features release-feature-vendored-set --target aarch64-unknown-linux-gnu
      - name: Save artifact for few days
        if: ${{ github.ref == 'refs/heads/make-binaries-from-ci' }}
        uses: actions/upload-artifact@v2
        with:
          name: quickwit-aarch64-unknown-linux-gnu
          path: target/aarch64-unknown-linux-gnu/release/quickwit
          retention-days: 3
      - name: Rename artifact
        if: ${{ github.ref != 'refs/heads/make-binaries-from-ci' }}
        run: mv target/aarch64-unknown-linux-gnu/release/quickwit ${{ env.ASSET_FULL_NAME }}
      - name: Compress artifact
        if: ${{ github.ref != 'refs/heads/make-binaries-from-ci' }}
        run: tar -czvf ${{ env.ASSET_FULL_NAME }}.tar.gz ${{ env.ASSET_FULL_NAME }}
      - name: Upload artifact
        if: ${{ github.ref != 'refs/heads/make-binaries-from-ci' }}
        uses: quickwit-inc/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: ${{ env.ASSET_FULL_NAME }}.tar.gz
          overwrite: true
          tag_name: ${{ env.ASSET_VERSION }}

#TODO: make these commented builds work
  # aarch64-linux-musl:
  #   name: release aarch64-linux-musl
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: ./.github/actions/artifact-name
  #       with: 
  #         suffix: aarch64-unknown-linux-musl
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         target: aarch64-unknown-linux-musl
  #         override: true
  #     - uses: actions-rs/cargo@v1
  #       with:
  #         use-cross: true
  #         command: build
  #         args: --release --features release-feature-vendored-set --target aarch64-unknown-linux-musl
  #     - name: Rename artifact
  #       run: mv target/aarch64-unknown-linux-musl/release/quickwit ${{ env.ASSET_FULL_NAME }}
  #     - name: Compress artifact
  #       run: tar -czvf ${{ env.ASSET_FULL_NAME }}.tar.gz ${{ env.ASSET_FULL_NAME }}
  #     - name: Upload artifact
  #       uses: quickwit-inc/upload-to-github-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         file: ${{ env.ASSET_FULL_NAME }}.tar.gz
  #         overwrite: true
  #         tag_name: ${{ env.ASSET_VERSION }}

  # armv7-linux-gnueabihf:
  #   name: release armv7-linux-gnueabihf
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: ./.github/actions/artifact-name
  #       with: 
  #         suffix: armv7-unknown-linux-gnueabihf
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         target: armv7-unknown-linux-gnueabihf
  #         override: true
  #     - uses: actions-rs/cargo@v1
  #       with:
  #         use-cross: true
  #         command: build
  #         args: --release --features release-feature-set --target armv7-unknown-linux-gnueabihf
  #     - name: Rename artifact
  #       run: mv target/armv7-unknown-linux-gnueabihf/release/quickwit ${{ env.ASSET_FULL_NAME }}
  #     - name: Compress artifact
  #       run: tar -czvf ${{ env.ASSET_FULL_NAME }}.tar.gz ${{ env.ASSET_FULL_NAME }}
  #     - name: Upload artifact
  #       uses: quickwit-inc/upload-to-github-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         file: ${{ env.ASSET_FULL_NAME }}.tar.gz
  #         overwrite: true
  #         tag_name: ${{ env.ASSET_VERSION }}

  # armv7-linux-musleabihf:
  #   name: release armv7-linux-musleabihf
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: ./.github/actions/artifact-name
  #       with: 
  #         suffix: armv7-unknown-linux-musleabihf
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         target: armv7-unknown-linux-musleabihf
  #         override: true
  #     - uses: actions-rs/cargo@v1
  #       with:
  #         use-cross: true
  #         command: build
  #         args: --release --features release-feature-set --target armv7-unknown-linux-musleabihf
  #     - name: Rename artifact
  #       run: mv target/armv7-unknown-linux-musleabihf/release/quickwit ${{ env.ASSET_FULL_NAME }}
  #     - name: Compress artifact
  #       run: tar -czvf ${{ env.ASSET_FULL_NAME }}.tar.gz ${{ env.ASSET_FULL_NAME }}
  #     - name: Upload artifact
  #       uses: quickwit-inc/upload-to-github-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         file: ${{ env.ASSET_FULL_NAME }}.tar.gz
  #         overwrite: true
  #         tag_name: ${{ env.ASSET_VERSION }}
