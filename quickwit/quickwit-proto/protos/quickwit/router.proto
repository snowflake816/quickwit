// Copyright (C) 2023 Quickwit, Inc.
//
// Quickwit is offered under the AGPL v3.0 and as commercial software.
// For commercial licensing, contact us at hello@quickwit.io.
//
// AGPL:
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program. If not, see <http://www.gnu.org/licenses/>.

syntax = "proto3";

package quickwit.ingest.router;

import "quickwit/ingest.proto";

service IngestRouterService {
    // Ingests batches of documents for one or multiple indexes.
    // TODO: Describe error cases and how to handle them.
    rpc Ingest(IngestRequestV2) returns (IngestResponseV2);
}

message IngestRequestV2 {
    repeated IngestSubrequest subrequests = 1;
    quickwit.ingest.CommitTypeV2 commit_type = 2;
}

message IngestSubrequest {
    string index_id = 1;
    string source_id = 2;
    quickwit.ingest.DocBatchV2 doc_batch = 3;
}

message IngestResponseV2 {
    repeated IngestSubresponse subresponses = 1;
}

message IngestSubresponse {
    string index_id = 1;
    string source_id = 2;
    repeated IngestSuccess successes  = 3;
    repeated IngestFailure failures  = 4;
}

message IngestSuccess {
    string index_uid = 1;
    string source_id = 2;
    uint64 shard_id = 3;
    // Replication position inclusive.
    quickwit.ingest.Position replication_position_inclusive = 4;
}

message IngestFailure {
    uint64 shard_id = 1;
    // IngestFailureReason reason = 2;
}
